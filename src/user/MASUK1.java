/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static user.DAFTAR.stmt;

/**
 *
 * @author fajriyan nur
 */
public final class MASUK1 extends javax.swing.JFrame {

    /**
     * Creates new form MASUK1
     */
    public MASUK1() {
        initComponents();
        Koneksi_DB();
        combo_jurusan();
        tampildata();
        tampildata2();
        autoid();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TABEL1 = new javax.swing.JTable();
        STATUS = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        NAMA_ADMIN = new javax.swing.JTextField();
        EMAIL_ADMIN = new javax.swing.JTextField();
        PASS_ADMIN = new javax.swing.JTextField();
        BIO_ADMIN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JK_ADMIN = new javax.swing.JComboBox<>();
        SUKA = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        DAFTAR_ADMIN = new javax.swing.JButton();
        UPDATE_ADMIN = new javax.swing.JButton();
        HAPUS_ADMIN = new javax.swing.JButton();
        C_ADMIN = new javax.swing.JButton();
        STATUS_ADMIN = new javax.swing.JComboBox<>();
        ID_ADMIN_AUTO = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        USER = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TABEL_MODERATOR = new javax.swing.JTable();
        MODERATOR = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));

        TABEL1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TABEL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABEL1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TABEL1);

        STATUS.setEditable(false);
        STATUS.setBackground(new java.awt.Color(51, 51, 51));
        STATUS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        STATUS.setForeground(new java.awt.Color(255, 255, 255));
        STATUS.setText("  ADMIN");

        jLabel1.setText("EDIT");

        NAMA_ADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NAMA_ADMINActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel2.setText("NAMA");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel3.setText("E-MAIL");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel4.setText("PASSWORD");

        JK_ADMIN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JENIS KELAMIN", "LAKI-LAKI", "PEREMPUAN" }));

        SUKA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUKAActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel5.setText("BIO");

        DAFTAR_ADMIN.setBackground(new java.awt.Color(153, 255, 153));
        DAFTAR_ADMIN.setText("DAFTARKAN");
        DAFTAR_ADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DAFTAR_ADMINActionPerformed(evt);
            }
        });

        UPDATE_ADMIN.setBackground(new java.awt.Color(153, 153, 255));
        UPDATE_ADMIN.setText("UPDATE");
        UPDATE_ADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATE_ADMINActionPerformed(evt);
            }
        });

        HAPUS_ADMIN.setBackground(new java.awt.Color(255, 204, 204));
        HAPUS_ADMIN.setText("HAPUS");
        HAPUS_ADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HAPUS_ADMINActionPerformed(evt);
            }
        });

        C_ADMIN.setBackground(new java.awt.Color(255, 255, 204));
        C_ADMIN.setText("C");
        C_ADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C_ADMINActionPerformed(evt);
            }
        });

        STATUS_ADMIN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "STATUS", "1", "2", "3" }));

        ID_ADMIN_AUTO.setEditable(false);
        ID_ADMIN_AUTO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ID_ADMIN_AUTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_ADMIN_AUTOActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("POSTINGAN");

        USER.setBackground(new java.awt.Color(51, 51, 51));
        USER.setForeground(new java.awt.Color(255, 255, 255));
        USER.setText("USER");
        USER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USERActionPerformed(evt);
            }
        });

        TABEL_MODERATOR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TABEL_MODERATOR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABEL_MODERATORMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TABEL_MODERATOR);

        MODERATOR.setBackground(new java.awt.Color(51, 51, 51));
        MODERATOR.setForeground(new java.awt.Color(255, 255, 255));
        MODERATOR.setText("MODERATOR");
        MODERATOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODERATORActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 11, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel3)
                                                    .addComponent(PASS_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                                    .addComponent(NAMA_ADMIN)
                                                    .addComponent(EMAIL_ADMIN)
                                                    .addComponent(jLabel4)
                                                    .addComponent(BIO_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                                    .addComponent(jLabel5))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(STATUS_ADMIN, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(SUKA, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(JK_ADMIN, javax.swing.GroupLayout.Alignment.LEADING, 0, 170, Short.MAX_VALUE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(DAFTAR_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(UPDATE_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(HAPUS_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(C_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane2)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42)
                        .addComponent(ID_ADMIN_AUTO, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(USER, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MODERATOR, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(STATUS, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(STATUS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ID_ADMIN_AUTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(USER)
                    .addComponent(MODERATOR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NAMA_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3))
                            .addComponent(DAFTAR_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EMAIL_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PASS_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BIO_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(UPDATE_ADMIN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HAPUS_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(C_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JK_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SUKA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(STATUS_ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(57, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NAMA_ADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NAMA_ADMINActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NAMA_ADMINActionPerformed

    private void SUKAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUKAActionPerformed
        combo_jurusan();
    }//GEN-LAST:event_SUKAActionPerformed

    private void DAFTAR_ADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DAFTAR_ADMINActionPerformed
        try {
            DAFTARIN();
        } catch (SQLException ex) {
            Logger.getLogger(MASUK1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DAFTAR_ADMINActionPerformed

    private void UPDATE_ADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATE_ADMINActionPerformed
        try {
            UPDATEIN();
        } catch (SQLException ex) {
            Logger.getLogger(MASUK1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UPDATE_ADMINActionPerformed

    private void TABEL1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABEL1MouseClicked
        ID_ADMIN_AUTO.setText(TABEL1.getValueAt(TABEL1.getSelectedRow(), 0).toString());
        NAMA_ADMIN.setText(TABEL1.getValueAt(TABEL1.getSelectedRow(), 1).toString());
        EMAIL_ADMIN.setText(TABEL1.getValueAt(TABEL1.getSelectedRow(), 2).toString());
        PASS_ADMIN.setText(TABEL1.getValueAt(TABEL1.getSelectedRow(), 3).toString());
        JK_ADMIN.setSelectedItem(TABEL1.getValueAt(TABEL1.getSelectedRow(), 4).toString());
        SUKA.setSelectedItem(TABEL1.getValueAt(TABEL1.getSelectedRow(), 5).toString());
        BIO_ADMIN.setText(TABEL1.getValueAt(TABEL1.getSelectedRow(), 6).toString());
    }//GEN-LAST:event_TABEL1MouseClicked

    private void HAPUS_ADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HAPUS_ADMINActionPerformed
        HAPUSIN();
    }//GEN-LAST:event_HAPUS_ADMINActionPerformed

    private void C_ADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C_ADMINActionPerformed
        bersihkan();
    }//GEN-LAST:event_C_ADMINActionPerformed

    private void ID_ADMIN_AUTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_ADMIN_AUTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ID_ADMIN_AUTOActionPerformed

    private void USERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USERActionPerformed
        closefrem();
        MASUK_USER masuk2 = new MASUK_USER();
        masuk2.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_USERActionPerformed

    private void TABEL_MODERATORMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABEL_MODERATORMouseClicked

    }//GEN-LAST:event_TABEL_MODERATORMouseClicked

    private void MODERATORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODERATORActionPerformed
        closefrem();
        MASUK_MODERATOR masuk2 = new MASUK_MODERATOR();
        masuk2.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_MODERATORActionPerformed

    /**
     * @param args the command line arguments
     */
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String URL_DB = "jdbc:mysql://localhost/uap-java-web";
    static final String username_db = "root";
    static final String password_db = "";
    static String sql,us,aaa,idd;
    
   
    static Connection conn;
    static Statement stmt;
    public PreparedStatement ps;
    static ResultSet hasil,hasil2;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MASUK1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MASUK1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MASUK1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MASUK1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MASUK1().setVisible(true);
            }
        });
    }
    
    public void closefrem (){
           super.dispose();
       }
    
    static void Koneksi_DB(){
        try {
            Class.forName(JDBC_DRIVER);
            conn = (Connection) DriverManager.getConnection(URL_DB,username_db,password_db);
            stmt = (Statement) conn.createStatement();
            //System.out.println("--- KONEKSI BERHASIL ---");
        } catch (Exception e) {
            System.out.println("--- KONEKSI GAGAL ---\n"+e);
        }
    }
    private void tampildata() {
        Object[] baris = {"ID","NAMA", "EMAIL","PASSWORD", "JENIS KELAMIN","KATEGORI","BIO"};
        DefaultTableModel model = new DefaultTableModel(null, baris);
        jScrollPane1.setEnabled(true);
        jScrollPane1.setViewportView(TABEL1);
        try {
            sql = "select * from user";
            hasil = stmt.executeQuery(sql);
            while(hasil.next()){
                String[] data = {
                    hasil.getString("id"),
                    hasil.getString("nama"),
                    hasil.getString("email"),
                    hasil.getString("password"),
                    hasil.getString("jk"),
                    hasil.getString("suka"),
                    hasil.getString("bio")};
                model.addRow(data);
            }
            TABEL1.setModel(model);
        } catch (SQLException e) {

        }
    }
    private void tampildata2() {
        Object[] baris1 = {"ID","PENULIS", "TOPIK","ISI TOPIK","TERKAIT"};
        DefaultTableModel model = new DefaultTableModel(null, baris1);
        jScrollPane2.setEnabled(true);
        jScrollPane2.setViewportView(TABEL_MODERATOR);
        try {
            sql = "select * from posting";
            hasil = stmt.executeQuery(sql);
            while(hasil.next()){
                String[] data = {
                    hasil.getString("id"),
                    hasil.getString("nama"),
                    hasil.getString("topik"),
                    hasil.getString("isi"),
                    hasil.getString("tentang")};
                model.addRow(data);
            }
            TABEL_MODERATOR.setModel(model);
        } catch (Exception e) {

        }
    }
    
    private void combo_jurusan() {
        try {
            sql = "select * from kategori";
            hasil = stmt.executeQuery(sql);
            SUKA.addItem("-- Pilih --");
            while (hasil.next()) {
                SUKA.addItem(hasil.getString("suka"));
            }
            System.out.println(SUKA.getSelectedItem().toString());
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    
    public void DAFTARIN() throws SQLException{
           try {
            if (NAMA_ADMIN.getText().equals("") || EMAIL_ADMIN.getText().equals("")
                    || PASS_ADMIN.getText().equals("")||JK_ADMIN.equals("JENIS KELAMIN")||SUKA.equals("-- Pilih --")||STATUS_ADMIN.equals("STATUS")||BIO_ADMIN.equals("")) {
            JOptionPane.showMessageDialog(null, "Semua Data harus diisi");
            }else{
                String sql2 = "insert into login(id,user ,pass, status, last_login) value ('"+ID_ADMIN_AUTO.getText()+"','"+ EMAIL_ADMIN.getText() + "','" + PASS_ADMIN.getText()+"',"+STATUS_ADMIN.getSelectedItem()+",now()"+")";
                stmt.executeUpdate(sql2);
                String namalengkap = NAMA_ADMIN.getText();
                String sql3 = "insert into user(id, nama, email, password,jk,suka,bio,daftar_pada) values ('"+ID_ADMIN_AUTO.getText()+"','"+namalengkap+ "','" + EMAIL_ADMIN.getText() + "','" + PASS_ADMIN.getText()+ "','" +JK_ADMIN.getSelectedItem()+
                        "','"+SUKA.getSelectedItem()+"','"+BIO_ADMIN.getText()+"',now()"+")";
                stmt.executeUpdate(sql3);
                autoid();
                tampildata();
                JOptionPane.showMessageDialog(null, "PENYIMPANAN BERHASIL");
            
            }
           } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "EROR NIH"+e);
           }        
       }
    
    private void autoid(){
       try {
            sql="select * from user order by id desc";
            stmt=(Statement) conn.createStatement();
            hasil=stmt.executeQuery(sql);
            if (hasil.next()) {
                String nofak = hasil.getString("id").substring(1);
                String AN = "" + (Integer.parseInt(nofak) + 1);
                String Nol = "";

                if(AN.length()==1)
                {Nol = "000";}
                else if(AN.length()==2)
                {Nol = "00";}
                else if(AN.length()==3)
                {Nol = "0";}
                else if(AN.length()==4)
                {Nol = "";}
               ID_ADMIN_AUTO.setText("F" + Nol + AN);
            } else {
               ID_ADMIN_AUTO.setText("F0001");
            }

           }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
     }
           }
    
    public void bersihkan(){
        autoid();
        NAMA_ADMIN.setText(null);
        EMAIL_ADMIN.setText(null);
        PASS_ADMIN.setText(null);
        BIO_ADMIN.setText(null);
        JK_ADMIN.setSelectedIndex(0);
        SUKA.setSelectedIndex(0);
        STATUS_ADMIN.setSelectedIndex(0);
    }
    
    public void UPDATEIN() throws SQLException{
           try {
            if (NAMA_ADMIN.getText().equals("") || EMAIL_ADMIN.getText().equals("")
                    || PASS_ADMIN.getText().equals("")||JK_ADMIN.equals("JENIS KELAMIN")
                    ||SUKA.equals("-- Pilih --")||STATUS_ADMIN.equals("STATUS")||BIO_ADMIN.equals("")) {
            JOptionPane.showMessageDialog(null, "Semua Data harus diisi");
            }else{
                String sql2 = "update user set nama='" + NAMA_ADMIN.getText() + "',email='" + EMAIL_ADMIN.getText() + "',password='" + PASS_ADMIN.getText()
                + "',jk='" + JK_ADMIN.getSelectedItem()+"',suka='"+SUKA.getSelectedItem()+"',bio='"+BIO_ADMIN.getText()+
                        "'where id='" + ID_ADMIN_AUTO.getText() + "'";
                stmt.executeUpdate(sql2);
                String namalengkap = NAMA_ADMIN.getText();
                String sql3 = "update login set user='" + EMAIL_ADMIN.getText() + "',pass='" + PASS_ADMIN.getText()
                + "',status='" + STATUS_ADMIN.getSelectedItem()+ "'where id='" + ID_ADMIN_AUTO.getText() + "'";
                stmt.executeUpdate(sql3);
                tampildata();
                JOptionPane.showMessageDialog(null, "UPDATE BERHASIL");
            
            }
           } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "EROR NIH\n"+e);
           }        
       }
    
    public void HAPUSIN(){
        String sql1 = "delete from user where id='" + ID_ADMIN_AUTO.getText()+"'";
        String sql2 = "delete from login where id ='" + ID_ADMIN_AUTO.getText()+"'";
        try {
            int validasi = JOptionPane.showConfirmDialog(rootPane, "HAPUS ??");
            switch (validasi) {
                case JOptionPane.YES_OPTION:
                stmt.executeUpdate(sql1);
                stmt.executeUpdate(sql2);
                autoid();
                tampildata();
                JOptionPane.showMessageDialog(null, "HAPUS BERHASIL");
                break;
                case JOptionPane.NO_OPTION:
                break;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BIO_ADMIN;
    private javax.swing.JButton C_ADMIN;
    private javax.swing.JButton DAFTAR_ADMIN;
    private javax.swing.JTextField EMAIL_ADMIN;
    private javax.swing.JButton HAPUS_ADMIN;
    private javax.swing.JTextField ID_ADMIN_AUTO;
    private javax.swing.JComboBox<String> JK_ADMIN;
    private javax.swing.JButton MODERATOR;
    private javax.swing.JTextField NAMA_ADMIN;
    private javax.swing.JTextField PASS_ADMIN;
    private javax.swing.JTextField STATUS;
    private javax.swing.JComboBox<String> STATUS_ADMIN;
    private javax.swing.JComboBox<String> SUKA;
    private javax.swing.JTable TABEL1;
    private javax.swing.JTable TABEL_MODERATOR;
    private javax.swing.JButton UPDATE_ADMIN;
    private javax.swing.JButton USER;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
